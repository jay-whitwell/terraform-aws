name: "[Workflow] Terraform Plan"

defaults:
  run:
    shell: bash

on: 
  workflow_call:
    inputs:
      directory:
        description: 'Terraform directory'
        required: true
        type: string
      plan_or_apply:
        description: 'Plan or Apply'
        required: true
        type: string
    secrets:
      allowed_ip:
        description: 'Allowed IP'
        required: false

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06
      - uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS credentials for Terraform
        uses: aws-actions/configure-aws-credentials@a78e788c51463a506fbaaec784bab37f73afb4e8
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-2
          role-duration-seconds: 1800
          role-session-name: TerraformGithubAction
      
      - name: Terraform init
        working-directory: terraform/${{ inputs.directory }}
        run: |
          echo "Directory: $GITHUB_WORKSPACE"
          ls
          echo "Terraform directory: ${{ inputs.directory }}"
          terraform workspace show
          terraform init -input=false 

      - name: Terraform plan
        working-directory: terraform/${{ inputs.directory }}
        run: |
          echo "Directory: $GITHUB_WORKSPACE"
          echo "Plan or apply: ${{ inputs.plan_or_apply }}"
          terraform workspace show
          terraform ${{ inputs.plan_or_apply }} -lock-timeout=5m -var "allowed_ip=${{ secrets.allowed_ip }}"
        if: ${{ inputs.plan_or_apply }} == 'plan'
      
      - name: Terraform apply
        working-directory: terraform/${{ inputs.directory }}
        run: |
          echo "Directory: $GITHUB_WORKSPACE"
          echo "Plan or apply: ${{ inputs.plan_or_apply }}"
          terraform workspace show
          terraform ${{ inputs.plan_or_apply }} -auto-approve -lock-timeout=5m -var "allowed_ip=${{ secrets.allowed_ip }}"
        if: ${{ inputs.plan_or_apply }} == 'apply'

     
